[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
requires-python = ">=3.7"
name = "{{cookiecutter.package_name}}"
description = "{{cookiecutter.short_description}}"
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}" },
]
maintainers = [
    { name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}" },
]
keywords = [
    "Python",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]

dependencies = [{% if cookiecutter.command_line_interface|lower != "false" %}
    "typer >=0.6.0",{% endif %}
]

{% if cookiecutter.command_line_interface|lower != "false" %}
[project.scripts]
{{cookiecutter.package_name}} = "{{cookiecutter.module_name}}.__main__:cli"{% endif %}


[project.optional-dependencies]
test = [
    "pytest >=7.1.3",
    "pytest-cov >=3.0.0",
    "coveralls >=3.3.0",
    "ruff >=0.0.189",
    "isort >=5.11.0",
    "mypy >=0.991",{% if cookiecutter.black_formatting|lower != "false" %}
    "black >= 22.8.0",{% endif %}
]{% if cookiecutter.documentation_website|lower != "false" %}
doc = [
    "mkdocs >=1.4.2",
    "mkdocs-material >=8.2.7",
    "mkdocstrings[python] >=0.19.1",
    "mdx-include >=1.4.1",
    "mkdocs-markdownextradata-plugin >=0.2.5",
]{% endif %}
dev = [
    "pre-commit >=2.17.0",
]


[project.urls]
Homepage = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"
Documentation = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"
History = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}/releases"
Tracker = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}/issues"
Source = "https://github.com/{{cookiecutter.github_organization_name}}/{{cookiecutter.package_name}}"


# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "test",
    "dev",{% if cookiecutter.documentation_website|lower != "false" %}
    "doc",{% endif %}
]
post-install-commands = [
    "pre-commit install",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
cov = "test --cov src {args}"
dev = "python tests/dev.py {args}"
fmt = [
    "isort src tests",{% if cookiecutter.black_formatting|lower != "false" %}
    "black src tests",{% endif %}
    "ruff src tests --fix",
]
check = [
    "isort --check-only --diff src",
    "ruff src tests",{% if cookiecutter.black_formatting|lower != "false" %}
    "black src tests --check",{% endif %}
    "mypy src",
]
all = [
    "format",
    "check",
    "cov",
]{% if cookiecutter.documentation_website|lower != "false" %}
docs = "mkdocs serve -a localhost:8001"
{% endif %}

# TOOLS
[tool.hatch.version]
path = "src/{{cookiecutter.module_name}}/__init__.py"


[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
omit = ["tests/*"]


[tool.mypy]
strict = true
implicit_reexport = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
# disallow_untyped_calls = false
# disallow_untyped_defs = false
# disallow_any_generics = false


[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:httpx.*:"
]


[tool.isort]
line_length = 120
skip = ["__init__.py"]
profile = "black"

{% if cookiecutter.black_formatting|lower != "false" %}
[tool.black]
color = true
line-length = 120
target-version = ['py37']
skip-string-normalization = false{% endif %}


# https://github.com/charliermarsh/ruff#supported-rules
[tool.ruff]
target-version = "py37"
line-length = 120
select = [
    "A",
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle errors
    "F",   # pyflakes
    # "FBT", # flake8-boolean-trap
    # "I",   # isort
    "ICN",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",  # pycodestyle warnings
    "YTT",
]

ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "B006", # do not use mutable data structures for argument defaults
    "C901", # too complex
    "S101", # Use of `assert` detected
    "T201", "T203", # remove print and pprint
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# [tool.ruff.isort]
# known-third-party = ["rdflib_endpoint"]
